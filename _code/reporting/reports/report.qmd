---
title: "World Carbon Pricing Database Report"
author: "Geoffroy Dolphin"
format:
  html:
    toc: true
    echo: false
  pdf:
    toc: true
    echo: false
jupyter: python3
output-dir: ../../_output/_reports
---

# World Carbon Pricing Database

```{python}
import yaml
import pandas as pd
from glob import glob
from IPython.display import Image, display

with open('/Users/gd/GitHub/ECP/_code/reporting/reports/report_config.yaml') as f:
    config = yaml.safe_load(f)

# Load data
wcpd_df = pd.concat([pd.read_csv(f) for f in glob("/Users/gd/GitHub/ECP/_raw/wcpd_usd/CO2/constantPrices/FixedXRate/*.csv")])
ecp_df = pd.read_csv("/Users/gd/GitHub/ECP/_output/_dataset/ecp/ipcc/ecp_economy/ecp_CO2.csv")
coverage_df = pd.read_csv("/Users/gd/GitHub/ECP/_output/_dataset/coverage/tot_coverage_jurisdiction_CO2.csv")
dfs = {'WCPD_CO2': wcpd_df, 'ECP_ECONOMY_CO2': ecp_df, 'COVERAGE_CO2':coverage_df}

# Helper
def get_data_point(label, jurisdiction, year, config, dfs):
    meta = config['mappings'][label]
    if meta.get('static', False):
        return jurisdiction
    df = dfs[meta['file']]
    if 'jurisdiction' in df.columns:
        df = df[df['jurisdiction'] == jurisdiction]
    if 'year' in df.columns and year is not None:
        df = df[df['year'] == year]
    col = meta['column']
    op = meta['operation']
    if op == 'mean':
        return df[col].mean()
    elif op == 'max':
        return df[col].max()
    elif op == 'sum':
        return df[col].sum()
    elif op == 'list':
        df = df[(~df['tax_curr_code'].isna()) | (~df['ets_curr_code'].isna())]
        return df[col].dropna().unique().tolist()
    elif op == 'percent_global':
        total = df[col].sum()
        grand_total = dfs[meta['file']][col].sum()
        return 100 * total / grand_total
    elif op == 'count_unique':
        return df[df[col] == meta['filter_value']]['jurisdiction'].nunique()
    elif op == 'count_both':
        counts = dfs[meta['file']].groupby('jurisdiction')[col].nunique()
        return counts[counts >= 2].count()
    elif op == 'passthrough':
        return df[col].iloc[0] if not df.empty else None
    else:
        raise ValueError(f"Unknown op {op}")
```

\newpage

## Country Fact Sheets

```{python}
from IPython.display import Image, display

for jurisdiction in config['jurisdictions']:
    latest_year = get_data_point('latest_year', jurisdiction, None, config, dfs)
    avg_price = get_data_point('average_price', jurisdiction, latest_year, config, dfs)
    max_price = get_data_point('maximum_price', jurisdiction, latest_year, config, dfs)
    sect_cov = get_data_point('sectoral_coverage', jurisdiction, latest_year, config, dfs)
    tot_cov = get_data_point('total_co2_covered', jurisdiction, latest_year, config, dfs)
    
    n_per_line = 9
    
    # Group the list
    lines = [
        ', '.join(sect_cov[i:i+n_per_line])
        for i in range(0, len(sect_cov), n_per_line)
    ]
    sect_cov_str = '\n'.join(lines)

    print(
        f"{jurisdiction} ({latest_year}):\n"
        f"\tAverage price = {avg_price:.2f} USD/tCO2\n"
        f"\tMaximum price = {max_price:.2f} USD/tCO2\n"
        f"\tSectoral coverage (IPCC) = {sect_cov_str}\n"
        f"\tTotal coverage (CO2) = {tot_cov:.2f}"
    )
    #display(Image(f"../_output/charts/{jurisdiction.lower().replace(' ', '_')}_price_trend.png"))

```

\newpage

## Cross-country summary

```{python}
from IPython.display import Image, display

display(Image("/Users/gd/GitHub/ECP/_output/_figures/plots/world_sectors_ecp.png"))

display(Image("/Users/gd/GitHub/ECP/_output/_figures/plots/max_price_ecp_2024.png"))

```
