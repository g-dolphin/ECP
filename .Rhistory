### Setup
wd<-file.path(here::here(),"_code","compilation","ecp","industry")
setwd(wd)
### Import data
gloriawd<-file.path(wd,"import","gloria")
timestep<-"2010"
qcode<-"20230727"
mcode<-"20230314"
library(dplyr)
library(data.table)
library(Rfast)
library(readxl)
### specify here the filepath where the data is located
fpe<-file.path("C:", "Users", "jomerkle",
"OneDrive - Norwegian University of Life Sciences",
"data",
"GLORIA",
"057",
timestep)
## notes:
# economic values in k USD basic price
# we have 120 sectors. Industries, products, industries, products.
# We delete the product part, as we do not need it.
# we have 164 countries, and 120 sectors
# we only need markup001 (basic prices)
### 1 Import Satellite data ####################################################
# this just to create a vector of index numbers for those rows and columns we want to keep
# we want to keep only MRIO data, so remove the supply matrices within
# fread is a faster reader than read.csv
39360/(2*120)
sec<-seq(1:39360) # sequence of numbers (for columns)
ser<-seq(1:39360) # sequence of numbers (for rows)
ones<-rep(1,times=120)
zeros<-rep(0,times=120)
oz<-c(ones,zeros)
full<-rep(oz,times=164)
sec[full==0]<-NA
ser[full==1]<-NA
cselector<-sec[!is.na(sec)] # removes NA values (from columns sequence)
rselector<-ser[!is.na(ser)] # removes NA values (from rows sequence)
rm(full,ones,oz,ser,sec,zeros) # remove objects no longer needed
# satellites for transaction data (reads the satellite data with fread)
tq<-data.table::fread(file = file.path(fpe,
paste0(qcode,
"_120secMother_AllCountries_002_TQ-Results_",
timestep,
"_057_Markup001(full).csv")
),
header = F,
select = cselector)
tqm<-as.matrix(tq)
yq<-read.csv(file.path(fpe,
paste0(qcode,
"_120secMother_AllCountries_002_YQ-Results_",
timestep,
"_057_Markup001(full).csv")
),
header = F)
yqm<-as.matrix(yq)
rm(tq,yq)
# import index data
sector_ind <- read_excel(file.path(fpe,"..","GLORIA_ReadMe_057.xlsx"),sheet = "Sectors")
region_ind <- read_excel(file.path(fpe,"..","GLORIA_ReadMe_057.xlsx"),sheet = "Regions")
satellites_ind <- read_excel(file.path(fpe,"..","GLORIA_ReadMe_057.xlsx"),sheet = "Satellites")
demand_ind <- read_excel(file.path(fpe,"..","GLORIA_ReadMe_057.xlsx"),sheet = "Value added and final demand")
sequential_ind <- read_excel(file.path(fpe,"..","GLORIA_ReadMe_057.xlsx"),sheet = "Sequential region-sector labels")
dim(yqm)
dim(tqm)
View(satellites_ind)
View(satellites_ind)
satellites_ind$Sat_indicator %>% contains("EDGAR")
View(satellites_ind)
satellites_ind %>% filter(Sat_head_indicator,contains("EDGAR"))
whichh(contains(satellites_ind$Sat_head_indicator,"Edgar"))
which(contains(satellites_ind$Sat_head_indicator,"Edgar"))
which(grepl(satellites_ind$Sat_head_indicator,"Edgar"))
View(satellites_ind)
which(grepl(satellites_ind$Sat_head_indicator,"EDGAR"))
grepl(satellites_ind$Sat_head_indicator,"EDGAR")
grepl("EDGAR",satellites_ind$Sat_head_indicator)
which(grepl("EDGAR",satellites_ind$Sat_head_indicator))
View(satellites_ind)
which(grepl("EDGAR",satellites_ind$Sat_head_indicator) & grepl("co2",satellites_ind$Sat_head_indicator))
which(grepl("EDGAR",satellites_ind$Sat_head_indicator) & grepl("co2",satellites_ind$Sat_indicator))
which( grepl("co2",satellites_ind$Sat_indicator))
rindx<-which(grepl("co2",satellites_ind$Sat_indicator))
View(satellites_ind[rindx,])
rindx<-which(grepl("co2",satellites_ind$Sat_indicator) & satellites_ind$Sat_unit=="kilotonnes")
View(satellites_ind[rindx,])
rindx<-which(grepl("co2_excl_short_cycle",satellites_ind$Sat_indicator) & satellites_ind$Sat_unit=="kilotonnes")
View(satellites_ind[rindx,])
tqm<-tqm[rindx,]
yqm<-yqm[rindx,]
satellites_ind<-satellites_ind[rindx,]
View(satellites_ind)
rm(rindx)
View(demand_ind)
View(yqm)
View(satellites_ind)
View(demand_ind)
save(demand_ind,region_ind,satellites_ind,sector_ind,sequential_ind,tqm,yqm,
file=file.path(gloriawd,"tmpdir",paste0("gloria_",timestep,".Rdata")))
rm(list=ls()[! ls() %in% c("wd","gloriawd")])
### Setup
wd<-file.path(here::here(),"_code","compilation","ecp","industry")
setwd(wd)
### Import data
gloriawd<-file.path(wd,"import","gloria")
source(file.path(gloriawd,"run_imports.R"))
