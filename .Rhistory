yqdf['co2_oecd_1a']<-yq[which(grepl("OECD",satellites_ind$Sat_head_indicator) & grepl("c_1A",satellites_ind$Sat_indicator)),] %>% colSums()
yqdf['co2_oecd_1b']<-yq[which(grepl("OECD",satellites_ind$Sat_head_indicator) & grepl("c_1B",satellites_ind$Sat_indicator)),] %>% colSums()
yqdf['co2_oecd_2']<-yq[which(grepl("OECD",satellites_ind$Sat_head_indicator) & grepl("c_2",satellites_ind$Sat_indicator)),] %>% colSums()
yqdf['co2_oecd_3']<-yq[which(grepl("OECD",satellites_ind$Sat_head_indicator) & grepl("c_3",satellites_ind$Sat_indicator)),] %>% colSums()
yqdf['co2_oecd_4']<-yq[which(grepl("OECD",satellites_ind$Sat_head_indicator) & grepl("c_4",satellites_ind$Sat_indicator)),] %>% colSums()
yqdf['co2_oecd_5']<-yq[which(grepl("OECD",satellites_ind$Sat_head_indicator) & grepl("c_5",satellites_ind$Sat_indicator)),] %>% colSums()
# move into list element
yql[[i]]<-yqdf
rm(yqdf)
}
zqd<-do.call("rbind",zql)
yqd<-do.call("rbind",yql)
# we save seperate these files separately due to GitHub restrictions on file size
if(pl=="curr_p"){
write.csv(zqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_edgar_industry_CO2.csv"))
write.csv(zqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_oecd_industry_CO2.csv"))
write.csv(yqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_edgar_finaldem_CO2.csv"))
write.csv(yqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_oecd_finaldem_CO2.csv"))
} else if (pl=="cons_p"){
write.csv(zqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_edgar_industry_CO2.csv"))
write.csv(zqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_oecd_industry_CO2.csv"))
write.csv(yqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_edgar_finaldem_CO2.csv"))
write.csv(yqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_oecd_finaldem_CO2.csv"))
}
# we save seperate these files separately due to GitHub restrictions on file size
if(pl=="curr_p"){
write.csv(zqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_edgar_industry_CO2.csv"),
row.names = F)
write.csv(zqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_oecd_industry_CO2.csv"))
write.csv(yqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_edgar_finaldem_CO2.csv"))
write.csv(yqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_oecd_finaldem_CO2.csv"))
} else if (pl=="cons_p"){
write.csv(zqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_edgar_industry_CO2.csv"))
write.csv(zqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_oecd_industry_CO2.csv"))
write.csv(yqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_edgar_finaldem_CO2.csv"))
write.csv(yqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_oecd_finaldem_CO2.csv"))
}
# we save seperate these files separately due to GitHub restrictions on file size
if(pl=="curr_p"){
write.csv(zqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_edgar_industry_CO2.csv"),row.names = F)
write.csv(zqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_oecd_industry_CO2.csv"),row.names = F)
write.csv(yqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_edgar_finaldem_CO2.csv"),row.names = F)
write.csv(yqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_oecd_finaldem_CO2.csv"),row.names = F)
} else if (pl=="cons_p"){
write.csv(zqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_edgar_industry_CO2.csv"),row.names = F)
write.csv(zqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_oecd_industry_CO2.csv"),row.names = F)
write.csv(yqd %>% select(year,country_sector,country,sector,contains("EDGAR")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_edgar_finaldem_CO2.csv"),row.names = F)
write.csv(yqd %>% select(year,country_sector,country,sector,contains("OECD")),
file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_oecd_finaldem_CO2.csv"),row.names = F)
}
### clean up
unlink(file.path(wd,"1_import","ecp","tmpdir"),recursive = T)
unlink(file.path(wd,"1_import","gloria","tmpdir"),recursive = T)
unlink(file.path(wd,"2_match","tmpdir"),recursive = T)
rm(list=ls())
### Setup
wd<-file.path(here::here(),"_code","compilation","ecp","industry")
setwd(wd)
### Import data
gversion<-"059"
## curr p | industry | edgar
df<-read.csv(file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_edgar_industry_CO2.csv"))
View(df)
df<-df %>% filter(year != 2022)
library(dplyr)
df<-df %>% filter(year != 2022)
View(df)
write.csv(df,file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_edgar_industry_CO2.csv"),row.names=F)
rm(df)
## curr p | industry | oecd
df<-read.csv(file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_oecd_industry_CO2.csv"))
df<-df %>% filter(year != 2022)
write.csv(df,file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_oecd_industry_CO2.csv"),row.names=F)
rm(df)
## curr p | finaldem | edgar
df<-read.csv(file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_edgar_finaldem_CO2.csv"))
df<-df %>% filter(year != 2022)
write.csv(df,file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_edgar_finaldem_CO2.csv"),row.names=F)
rm(df)
## curr p | finaldem | oecd
df<-read.csv(file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_oecd_finaldem_CO2.csv"))
df<-df %>% filter(year != 2022)
write.csv(df,file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"currentPrice","FlexXRate",
"ecp_gloria_oecd_finaldem_CO2.csv"),row.names=F)
rm(df)
## cons p | industry | edgar
df<-read.csv(file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_edgar_industry_CO2.csv"))
df<-df %>% filter(year != 2022)
write.csv(df,file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_edgar_industry_CO2.csv"),row.names=F)
rm(df)
## cons p | industry | oecd
df<-read.csv(file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_oecd_industry_CO2.csv"))
df<-df %>% filter(year != 2022)
write.csv(df,file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_oecd_industry_CO2.csv"),row.names=F)
rm(df)
## cons p | finaldem | edgar
df<-read.csv(file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_edgar_finaldem_CO2.csv"))
df<-df %>% filter(year != 2022)
write.csv(df,file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_edgar_finaldem_CO2.csv"),row.names=F)
rm(df)
## cons p | finaldem | oecd
df<-read.csv(file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_oecd_finaldem_CO2.csv"))
df<-df %>% filter(year != 2022)
write.csv(df,file.path(here::here(),
"_dataset","ecp","industry","ecp_gloria_sectors",gversion,
"constantPrice","FixedXRate",
"ecp_gloria_oecd_finaldem_CO2.csv"),row.names=F)
rm(df)
### Setup
wd<-file.path(here::here(),"_code","compilation","ecp","industry")
setwd(wd)
### Import data
gversion<-"059"
gloriawd<-file.path(wd,"1_import","gloria")
if(gversion=="059"){
source(file.path(gloriawd,"run_imports_v59.R"))
} else if(gversion=="057"){
source(file.path(gloriawd,"run_imports_v57.R"))
}
### Setup
wd<-file.path(here::here(),"_code","compilation","ecp","industry")
setwd(wd)
### Import data
gversion<-"059"
gloriawd<-file.path(wd,"1_import","gloria")
timestep<-"2010"
qcode<-"20231117"
### 1 Directories & packages ###################################################
library(dplyr)
library(data.table)
library(Rfast)
library(readxl)
library(tidyr)
### specify here the filepath where the data is located
fpe<-file.path("C:", "Users", "jomerkle",
"OneDrive - Norwegian University of Life Sciences",
"data",
"GLORIA",
gversion,
timestep)
39360/(2*120)
sec<-seq(1:39360) # sequence of numbers (for columns)
ser<-seq(1:39360) # sequence of numbers (for rows)
ones<-rep(1,times=120)
zeros<-rep(0,times=120)
oz<-c(ones,zeros)
full<-rep(oz,times=164)
sec[full==0]<-NA
ser[full==1]<-NA
cselector<-sec[!is.na(sec)] # removes NA values (from columns sequence)
rselector<-ser[!is.na(ser)] # removes NA values (from rows sequence)
rm(full,ones,oz,ser,sec,zeros) # remove objects no longer needed
# satellites for transaction data (reads the satellite data with fread)
tq<-data.table::fread(file = file.path(fpe,
paste0(qcode,
"_120secMother_AllCountries_002_TQ-Results_",
timestep,"_",gversion,
"_Markup001(full).csv")
),
header = F,
select = cselector)
tqm<-as.matrix(tq)
yq<-read.csv(file.path(fpe,
paste0(qcode,
"_120secMother_AllCountries_002_YQ-Results_",
timestep,"_",gversion,
"_Markup001(full).csv")
),
header = F)
yqm<-as.matrix(yq)
rm(tq,yq)
# import index data
sector_ind <- read_excel(file.path(fpe,"..",paste0("GLORIA_ReadMe_",gversion,".xlsx")),sheet = "Sectors")
region_ind <- read_excel(file.path(fpe,"..",paste0("GLORIA_ReadMe_",gversion,".xlsx")),sheet = "Regions")
satellites_ind <- read_excel(file.path(fpe,"..",paste0("GLORIA_ReadMe_",gversion,".xlsx")),sheet = "Satellites")
demand_ind <- read_excel(file.path(fpe,"..",paste0("GLORIA_ReadMe_",gversion,".xlsx")),sheet = "Value added and final demand")
sequential_ind <- read_excel(file.path(fpe,"..",paste0("GLORIA_ReadMe_",gversion,".xlsx")),sheet = "Sequential region-sector labels")
# shorten sequential_ind to reflect the non-product version
all_c_s<-sequential_ind$Sequential_regionSector_labels
short_c_s<-all_c_s[cselector]
sequential_ind$Sequential_regionSector_labels<-NA
sequential_ind<-sequential_ind[1:length(short_c_s),]
sequential_ind$Sequential_regionSector_labels<-short_c_s
# create full countrylabel and full sectorlabel vectors
cq<-region_ind$Region_names
fcql<-list()
for(i in 1:length(cq)){
fcql[[i]]<-rep(cq[i],times=nrow(sector_ind))
}
sequential_ind['fcq']<-do.call("c",fcql)
sequential_ind['fsq']<-rep(sector_ind$Sector_names,times=nrow(region_ind))
sequentiald_ind<- sequential_ind %>% select(Sequential_finalDemand_labels) %>% drop_na()
fcqld<-list()
for(i in 1:length(cq)){
fcqld[[i]]<-rep(cq[i],times=nrow(demand_ind))
}
sequentiald_ind['fcqd']<-do.call("c",fcqld)
sequentiald_ind['demandind']<-rep(demand_ind$Final_demand_names,times=nrow(region_ind))
rm(cq,fcql,fcqld)
View(sequential_ind)
unique(sequential_ind$fsq)
which(sequential_ind$fsq=="Building construction")
which(sequential_ind$fsq=="Civil engineering construction")
dim(tqm)
which(sequential_ind$fsq %in% c("Building construction","Civil engineering construction"))
columns<-which(sequential_ind$fsq %in% c("Building construction","Civil engineering construction"))
View(satellites_ind)
unique(satellites_ind$Sat_indicator)
View(satellites_ind)
rows<-which(satellites_ind$Sat_indicator=="'co2_excl_short_cycle_org_c_total_EDGAR_consistent'")
co2_edgar_row<-which(satellites_ind$Sat_indicator=="'co2_excl_short_cycle_org_c_total_EDGAR_consistent'")
co2_oecd_row<-which(satellites_ind$Sat_indicator=="'co2_excl_short_cycle_org_c_total_OECD_consistent'")
# look at data
tqm[co2_edgar_row,columns]
# look at data
summary(tqm[co2_edgar_row,columns])
# identify columns relating to construction
columns_building_constr<-which(sequential_ind$fsq == "Building construction")
columns_civeng_constr<-which(sequential_ind$fsq == "Civil engineering construction")
# look at data
summary(tqm[co2_edgar_row,columns_building_constr])
summary(tqm[co2_edgar_row,columns_civeng_constr])
# look at data
plot(tqm[co2_edgar_row,columns_building_constr])
plot(tqm[co2_edgar_row,columns_civeng_constr])
View(sequential_ind)
# make dataframe
region_ind$Region_names
plot(tqm[co2_edgar_row,columns_building_constr])
plot(tqm[co2_edgar_row,columns_civeng_constr])
plot(tqm[co2_oecd_row,columns_building_constr])
plot(tqm[co2_oecd_row,columns_civeng_constr])
plot(tqm[co2_oecd_row,columns_building_constr])
plot(tqm[co2_edgar_row,columns_building_constr])
### Setup
wd<-file.path(here::here(),"_code","compilation","ecp","industry")
setwd(wd)
### Import data
gversion<-"059"
gloriawd<-file.path(wd,"1_import","gloria")
dir.create(file.path(gloriawd, "tmpdir"))
timestep<-"2010"
qcode<-"20231117"
library(dplyr)
library(data.table)
library(Rfast)
library(readxl)
library(tidyr)
### specify here the filepath where the data is located
fpe<-file.path("C:", "Users", "jomerkle",
"OneDrive - Norwegian University of Life Sciences",
"data",
"GLORIA",
gversion,
timestep)
39360/(2*120)
sec<-seq(1:39360) # sequence of numbers (for columns)
ser<-seq(1:39360) # sequence of numbers (for rows)
ones<-rep(1,times=120)
zeros<-rep(0,times=120)
oz<-c(ones,zeros)
full<-rep(oz,times=164)
sec[full==0]<-NA
ser[full==1]<-NA
cselector<-sec[!is.na(sec)] # removes NA values (from columns sequence)
rselector<-ser[!is.na(ser)] # removes NA values (from rows sequence)
rm(full,ones,oz,ser,sec,zeros) # remove objects no longer needed
# satellites for transaction data (reads the satellite data with fread)
tq<-data.table::fread(file = file.path(fpe,
paste0(qcode,
"_120secMother_AllCountries_002_TQ-Results_",
timestep,"_",gversion,
"_Markup001(full).csv")
),
header = F,
select = cselector)
tqm<-as.matrix(tq)
rm(tq,yq)
# import index data
sector_ind <- read_excel(file.path(fpe,"..",paste0("GLORIA_ReadMe_",gversion,".xlsx")),sheet = "Sectors")
region_ind <- read_excel(file.path(fpe,"..",paste0("GLORIA_ReadMe_",gversion,".xlsx")),sheet = "Regions")
satellites_ind <- read_excel(file.path(fpe,"..",paste0("GLORIA_ReadMe_",gversion,".xlsx")),sheet = "Satellites")
demand_ind <- read_excel(file.path(fpe,"..",paste0("GLORIA_ReadMe_",gversion,".xlsx")),sheet = "Value added and final demand")
sequential_ind <- read_excel(file.path(fpe,"..",paste0("GLORIA_ReadMe_",gversion,".xlsx")),sheet = "Sequential region-sector labels")
# shorten sequential_ind to reflect the non-product version
all_c_s<-sequential_ind$Sequential_regionSector_labels
short_c_s<-all_c_s[cselector]
sequential_ind$Sequential_regionSector_labels<-NA
sequential_ind<-sequential_ind[1:length(short_c_s),]
sequential_ind$Sequential_regionSector_labels<-short_c_s
# create full countrylabel and full sectorlabel vectors
cq<-region_ind$Region_names
fcql<-list()
for(i in 1:length(cq)){
fcql[[i]]<-rep(cq[i],times=nrow(sector_ind))
}
sequential_ind['fcq']<-do.call("c",fcql)
sequential_ind['fsq']<-rep(sector_ind$Sector_names,times=nrow(region_ind))
sequentiald_ind<- sequential_ind %>% select(Sequential_finalDemand_labels) %>% drop_na()
fcqld<-list()
for(i in 1:length(cq)){
fcqld[[i]]<-rep(cq[i],times=nrow(demand_ind))
}
sequentiald_ind['fcqd']<-do.call("c",fcqld)
sequentiald_ind['demandind']<-rep(demand_ind$Final_demand_names,times=nrow(region_ind))
rm(cq,fcql,fcqld)
dim(tqm)
dim(yqm)
# we only want co2 excl short cycle emissions
rindx<-which(grepl("co2_excl_short_cycle",satellites_ind$Sat_indicator) & satellites_ind$Sat_unit=="kilotonnes")
tqm<-tqm[rindx,]
yqm<-yqm[rindx,]
satellites_ind<-satellites_ind[rindx,]
rm(rindx)
View(tqm)
View(sequential_ind)
View(sequential_ind)
which(fsq=="Building construction")
which(sequential_ind$fsq=="Building construction")
View(tqm[,which(sequential_ind$fsq=="Building construction")])
dim(tqm)
View(satellites_ind)
which(satellites_ind$Sat_indicator=="'co2_excl_short_cycle_org_c_total_EDGAR_consistent'")
View(tqm[which(satellites_ind$Sat_indicator=="'co2_excl_short_cycle_org_c_total_EDGAR_consistent'"),
which(sequential_ind$fsq=="Building construction")
]
)
View(tqm[1,
which(sequential_ind$fsq=="Building construction")
])
View(tqm[1,which(sequential_ind$fsq=="Building construction")])
View(tqm[,which(sequential_ind$fsq=="Building construction")])
View(tqm[,which(sequential_ind$fsq=="Civil engineering construction")])
# satellites for transaction data (reads the satellite data with fread)
tq<-data.table::fread(file = file.path(fpe,
paste0(qcode,
"_120secMother_AllCountries_002_TQ-Results_",
timestep,"_",gversion,
"_Markup001(full).csv")
),
header = F,
select = cselector)
39360/(2*120)
sec<-seq(1:39360) # sequence of numbers (for columns)
ser<-seq(1:39360) # sequence of numbers (for rows)
ones<-rep(1,times=120)
zeros<-rep(0,times=120)
oz<-c(ones,zeros)
full<-rep(oz,times=164)
sec[full==0]<-NA
View(sequential_ind)
39360/(2*120)
sec<-seq(1:39360) # sequence of numbers (for columns)
ser<-seq(1:39360) # sequence of numbers (for rows)
ones<-rep(1,times=120)
zeros<-rep(0,times=120)
oz<-c(ones,zeros)
full<-rep(oz,times=164)
sec[full==0]<-NA
ser[full==1]<-NA
cselector<-sec[!is.na(sec)] # removes NA values (from columns sequence)
rselector<-ser[!is.na(ser)] # removes NA values (from rows sequence)
rm(full,ones,oz,ser,sec,zeros) # remove objects no longer needed
# satellites for transaction data (reads the satellite data with fread)
tq<-data.table::fread(file = file.path(fpe,
paste0(qcode,
"_120secMother_AllCountries_002_TQ-Results_",
timestep,"_",gversion,
"_Markup001(full).csv")
),
header = F,
select = cselector)
View(tq)
